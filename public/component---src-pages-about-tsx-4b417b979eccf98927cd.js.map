{"version":3,"sources":["webpack:///./src/components/about/about.style.tsx","webpack:///./src/components/altCard.tsx","webpack:///./src/components/about/about.tsx","webpack:///./src/pages/about.tsx"],"names":["AboutBanner","memo","text","about","paraOne","paraTwo","paraThree","paraFour","name","content","props","context","_header","data","allFile","edges","filter","edge","node","childSiteJson","header","_about","render","this","className","location","pathname","React","pageQuery"],"mappings":"wMAEaA,EAAc,mBAAH,mBAAG,CAAH,sY,iCCkBTC,kBAXC,SAACC,GACf,OACE,YAAC,IAAD,KACE,qBAAIA,EAAKC,MAAMC,SACf,qBAAIF,EAAKC,MAAME,SACf,qBAAIH,EAAKC,MAAMG,WACf,qBAAIJ,EAAKC,MAAMI,cCkBNN,kBArBD,SAACE,GAMb,OACE,YAAC,IAAD,KACE,YAAC,IAAD,KACE,yBARQ,wBASR,oBAAMK,KAAM,cAAeC,QARpB,eASP,oBAAMD,KAAM,WAAYC,QAP5B,yFASE,YAACT,EAAD,KACE,gCAEF,YAAC,EAAD,CAASG,MAAOA,EAAMA,Y,4GC2C1B,WAAYO,EAAYC,GAAc,aACpC,cAAMD,EAAOC,IAAb,MAEKC,QAAU,EAAKF,MAAMG,KAAKC,QAAQC,MAAMC,QAC3C,SAAAC,GAAI,OAAuC,OAAnCA,EAAKC,KAAKC,cAAcC,UAChC,GAAGF,KAAKC,cAAcC,OACxB,EAAKC,OAAS,EAAKX,MAAMG,KAAKC,QAAQC,MAAMC,QAC1C,SAAAC,GAAI,OAAsC,OAAlCA,EAAKC,KAAKC,cAAchB,SAChC,GAAGe,KAAKC,cAAchB,MARY,E,0GAW/BmB,OAAP,WAME,OAAIC,KAAKF,QAAUE,KAAKX,QAEpB,mBAAKY,UAAW,WACd,YAAC,IAAD,KACE,YAAC,IAAD,KACE,yBAVI,wBAWJ,oBAAMhB,KAAM,cAAeC,QAVxB,eAWH,oBAAMD,KAAM,WAAYC,QAThC,0FAaI,YAAC,IAAD,MACA,YAAC,aAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOC,MAAOa,KAAKb,MAAMe,SAASC,WAClC,YAAC,IAAD,CAAQN,OAAQG,KAAKX,UACrB,YAAC,EAAD,CAAOT,MAAOoB,KAAKF,WAGvB,YAAC,IAAD,OAIG,M,GA5CgBM,aAiDhBC,EAAY","file":"component---src-pages-about-tsx-4b417b979eccf98927cd.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const AboutBanner = styled.div`\n  box-shadow: 0 0px 2px rgba(0, 0, 0, 0.3), 0px -6px 20px rgba(0, 0, 0, 0.22);\n  background: rgba(0, 0, 0, 0.1);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3), 0 4px 12px rgba(0, 0, 0, 0.22);\n  border-radius: 1rem;\n  margin-bottom: 2rem;\n  background: rgba(0, 0, 0, 0.1);\n  position: relative;\n`;\n","import * as React from 'react';\nimport { AltCardContainer } from '../styles/styles';\nimport { memo } from 'react';\nimport { IPageAbout } from '../pages/about';\n\ninterface IAboutTextProps {\n  about: IPageAbout;\n}\n\nconst AltCard = (text: IAboutTextProps) => {\n  return (\n    <AltCardContainer>\n      <p>{text.about.paraOne}</p>\n      <p>{text.about.paraTwo}</p>\n      <p>{text.about.paraThree}</p>\n      <p>{text.about.paraFour}</p>\n    </AltCardContainer>\n  );\n};\n\nexport default memo(AltCard);\n","import * as React from 'react';\nimport { memo } from 'react';\nimport { Main } from '../../styles/styles';\nimport { AboutBanner } from './about.style';\nimport Helmet from 'react-helmet';\nimport AltCard from '../altCard';\nimport { IPageAbout } from '../../pages/about';\n\ninterface IAbout {\n  about: IPageAbout;\n}\n\nconst About = (about: IAbout) => {\n  const title = 'Elliot Evans - About';\n  const desc = 'About Page';\n  const keywords =\n    'Front End Developer, Web Application Developer, Web Developer, Javascript Developer';\n\n  return (\n    <Main>\n      <Helmet>\n        <title>{title}</title>\n        <meta name={'description'} content={desc} />\n        <meta name={'keywords'} content={keywords} />\n      </Helmet>\n      <AboutBanner>\n        <h1>About</h1>\n      </AboutBanner>\n      <AltCard about={about.about} />\n    </Main>\n  );\n};\n\nexport default memo(About);\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Main } from '../styles/styles';\nimport Footer from '../components/footer';\n\n// default style stuff\nimport '../styles/index.css';\n\n// about stuff\nimport Navigation from '../components/navigation';\nimport Blobs from '../blobs/blobs';\nimport Banner from '../components/banner';\nimport About from '../components/about/about';\nimport Helmet from 'react-helmet';\n\ninterface IndexPageProps {\n  location: Location;\n  data: {\n    allMarkdownRemark: {\n      edges: Array<IEdge>;\n    };\n    allFile: IHeaderQuery;\n  };\n}\n\ninterface IHeaderQuery {\n  edges: Array<IHeaderNode>;\n}\n\nexport interface IPageAbout {\n  paraOne: string;\n  paraTwo: string;\n  paraThree: string;\n  paraFour: string;\n}\n\ninterface IHeaderNode {\n  node: {\n    id: string;\n    childSiteJson: {\n      id: string;\n      header: IHeader;\n      about: IPageAbout;\n    };\n  };\n}\n\nexport interface IEdge {\n  node: INode;\n}\n\nexport interface INode {\n  excerpt: string;\n  timeToRead: number;\n  frontmatter: {\n    date: string;\n    title: string;\n  };\n  id: string;\n}\n\nexport interface IHeader {\n  icon: string;\n  heading: string;\n  subHeading: string;\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  private readonly _header: IHeader;\n  private readonly _about: IPageAbout;\n\n  constructor(props: any, context: any) {\n    super(props, context);\n\n    this._header = this.props.data.allFile.edges.filter(\n      edge => edge.node.childSiteJson.header !== null\n    )[0].node.childSiteJson.header;\n    this._about = this.props.data.allFile.edges.filter(\n      edge => edge.node.childSiteJson.about !== null\n    )[0].node.childSiteJson.about;\n  }\n\n  public render() {\n    const title = 'Elliot Evans - About';\n    const desc = 'About Page';\n    const keywords =\n      'Front End Developer, Web Application Developer, Web Developer, Javascript Developer';\n\n    if (this._about && this._header) {\n      return (\n        <div className={'appGrid'}>\n          <Main>\n            <Helmet>\n              <title>{title}</title>\n              <meta name={'description'} content={desc} />\n              <meta name={'keywords'} content={keywords} />\n            </Helmet>\n\n          </Main>\n          <Navigation />\n          <React.StrictMode>\n            <Main>\n              <Blobs props={this.props.location.pathname} />\n              <Banner header={this._header} />\n              <About about={this._about} />\n            </Main>\n          </React.StrictMode>\n          <Footer />\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n    allFile(\n      filter: {\n        name: { in: [\"header\", \"about\"] }\n        sourceInstanceName: { eq: \"site\" }\n      }\n    ) {\n      edges {\n        node {\n          id\n          childSiteJson {\n            id\n            header {\n              icon\n              heading\n              subHeading\n            }\n            about {\n              paraOne\n              paraTwo\n              paraThree\n              paraFour\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}