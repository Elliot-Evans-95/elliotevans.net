{"version":3,"sources":["webpack:///./src/components/contact/contact.style.tsx","webpack:///./src/components/contact/inputGroup.tsx","webpack:///./src/components/contact/contact.tsx","webpack:///./src/pages/contact.tsx","webpack:///./src/components/contact/pageHeader.tsx"],"names":["ContactMain","ContactForm","InputGroup","label","placeholder","type","id","name","required","Contact","fieldData","heading","subHeading","action","method","map","field","key","props","context","render","className","content","this","location","pathname","header","data","allFile","edges","node","childSiteJson","React","pageQuery","PageHeader"],"mappings":"wMAEaA,EAAc,oBAAH,oBAAG,CAAH,qIAaXC,EAAc,oBAAH,oBAAG,CAAH,oX,wBC2BTC,EAhCI,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACxC,MAAa,aAATA,EAEA,YAAC,IAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CACEC,GAAIH,EACJI,KAAMJ,EACNC,YAAaA,EACbI,UAAQ,MAOd,YAAC,IAAD,KACE,YAAC,IAAD,KACGL,EACD,YAAC,IAAD,CACEG,GAAIH,EACJI,KAAMJ,EACNC,YAAaA,EACbC,KAAMA,EACNG,UAAQ,OCsBLC,EAlDC,WACd,IAAMC,EAAY,CAChB,CACEP,MAAO,OACPC,YAAa,YACbC,KAAM,QAER,CACEF,MAAO,QACPC,YAAa,gBACbC,KAAM,SAER,CACEF,MAAO,UACPC,YAAa,2BACbC,KAAM,aAeV,OACE,YAACL,EAAD,KACE,YAAC,IAAD,CACEW,QAAS,UACTC,WAAY,uDAEd,YAACX,EAAD,CACEY,OAAO,sDACPC,OAAO,OACPR,GAAG,YAnBAI,EAAUK,KAAI,SAAAC,GAAK,OACxB,YAAC,EAAD,CACEC,IAAKD,EAAMb,MACXA,MAAOa,EAAMb,MACbC,YAAaY,EAAMZ,YACnBC,KAAMW,EAAMX,UAiBZ,YAAC,IAAD,KACE,YAAC,IAAD,CAAkBA,KAAK,e,iICW/B,WAAYa,EAAYC,GAAc,OACpC,YAAMD,EAAOC,IADuB,K,0GAI/BC,OAAP,WAME,OACE,mBAAKC,UAAW,WACd,YAAC,IAAD,KACE,yBARQ,0BASR,oBAAMd,KAAM,cAAee,QARpB,iBASP,oBAAMf,KAAM,WAAYe,QAP5B,yFAUE,YAAC,IAAD,MACA,YAAC,aAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOJ,MAAOK,KAAKL,MAAMM,SAASC,WAClC,YAAC,IAAD,CACEC,OACEH,KAAKL,MAAMS,KAAKC,QAAQC,MAAM,GAAGC,KAAKC,cAAcL,SAGxD,YAAC,EAAD,QAGJ,YAAC,IAAD,Q,GA/BqBM,aAqChBC,EAAY,c,oCChGzB,sCAYeC,IAPI,SAAC,GAAD,IAAGvB,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACjB,YAAC,IAAD,KACE,sBAAKD,GACL,sBAAKC","file":"component---src-pages-contact-tsx-7beb8f03a84f4b97c113.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactMain = styled.main`\n  grid-area: main;\n\n  padding: 1rem;\n  position: relative;\n\n  @media (min-width: 45em) {\n    padding: 0;\n    width: 100%;\n    margin: 0 auto;\n  }\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  padding: 1rem 4rem 1rem 1rem;\n  flex-direction: column;\n  justify-content: space-around;\n  border-radius: 2px;\n  box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  align-content: center;\n\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3), 0 4px 12px rgba(0, 0, 0, 0.22);\n  border-radius: 1rem;\n  padding: 1rem;\n  background: rgba(0, 0, 0, 0.1);\n  margin-bottom: 2rem;\n`;\n","// @flow\n\nimport React from 'react';\nimport {\n  InputBox,\n  InputField,\n  InputLabel,\n  TextAreaField,\n} from '../../styles/styles';\n\nconst InputGroup = ({ label, placeholder, type }) => {\n  if (type === 'textarea') {\n    return (\n      <InputBox>\n        <InputLabel>\n          <TextAreaField\n            id={label}\n            name={label}\n            placeholder={placeholder}\n            required\n          />\n        </InputLabel>\n      </InputBox>\n    );\n  } else {\n    return (\n      <InputBox>\n        <InputLabel>\n          {label}\n          <InputField\n            id={label}\n            name={label}\n            placeholder={placeholder}\n            type={type}\n            required\n          />\n        </InputLabel>\n      </InputBox>\n    );\n  }\n};\n\nexport default InputGroup;\n","import * as React from 'react';\nimport { FormSubmitLabel, FormSubmitSubmit } from '../../styles/styles';\nimport { ContactForm, ContactMain } from './contact.style';\nimport PageHeader from './pageHeader';\nimport InputGroup from './inputGroup';\n\nconst Contact = () => {\n  const fieldData = [\n    {\n      label: 'name',\n      placeholder: 'full name',\n      type: 'text',\n    },\n    {\n      label: 'email',\n      placeholder: 'email address',\n      type: 'email',\n    },\n    {\n      label: 'message',\n      placeholder: 'Type you message here...',\n      type: 'textarea',\n    },\n  ];\n\n  const inputGroupList = () => {\n    return fieldData.map(field => (\n      <InputGroup\n        key={field.label}\n        label={field.label}\n        placeholder={field.placeholder}\n        type={field.type}\n      />\n    ));\n  };\n\n  return (\n    <ContactMain>\n      <PageHeader\n        heading={'Contact'}\n        subHeading={'If you wish to Contact me please fill out the form'}\n      />\n      <ContactForm\n        action=\"https://formspree.io/ell15evans.nuls@googlemail.com\"\n        method=\"POST\"\n        id=\"sendForm\"\n      >\n        {inputGroupList()}\n        <FormSubmitLabel>\n          <FormSubmitSubmit type=\"submit\" />\n        </FormSubmitLabel>\n      </ContactForm>\n    </ContactMain>\n  );\n};\n\nexport default Contact;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Main } from '../styles/styles';\nimport Footer from '../components/footer';\n\n// default style stuff\nimport '../styles/index.css';\n\n// home stuff\nimport Navigation from '../components/navigation';\nimport Blobs from '../blobs/blobs';\nimport Banner from '../components/banner';\nimport Contact from '../components/contact/contact';\nimport Helmet from 'react-helmet';\n\ninterface IndexPageProps {\n  location: Location;\n  data: {\n    allMarkdownRemark: {\n      edges: Array<IEdge>;\n    };\n    allFile: IHeaderQuery;\n  };\n}\n\ninterface IHeaderQuery {\n  edges: Array<IHeaderNode>;\n}\n\ninterface IHeaderNode {\n  node: {\n    id: string;\n    childSiteJson: {\n      id: string;\n      header: IHeader;\n    };\n  };\n}\n\nexport interface IEdge {\n  node: INode;\n}\n\nexport interface INode {\n  excerpt: string;\n  timeToRead: number;\n  frontmatter: {\n    date: string;\n    title: string;\n  };\n  id: string;\n}\n\nexport interface IHeader {\n  icon: string;\n  heading: string;\n  subHeading: string;\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  constructor(props: any, context: any) {\n    super(props, context);\n  }\n\n  public render() {\n    const title = 'Elliot Evans - Contact';\n    const desc = 'Contact Page';\n    const keywords =\n      'Front End Developer, Web Application Developer, Web Developer, Javascript Developer';\n\n    return (\n      <div className={'appGrid'}>\n        <Helmet>\n          <title>{title}</title>\n          <meta name={'description'} content={desc} />\n          <meta name={'keywords'} content={keywords} />\n        </Helmet>\n\n        <Navigation />\n        <React.StrictMode>\n          <Main>\n            <Blobs props={this.props.location.pathname} />\n            <Banner\n              header={\n                this.props.data.allFile.edges[0].node.childSiteJson.header\n              }\n            />\n            <Contact />\n          </Main>\n        </React.StrictMode>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n    allFile(\n      filter: { name: { eq: \"header\" }, sourceInstanceName: { eq: \"site\" } }\n    ) {\n      edges {\n        node {\n          id\n          childSiteJson {\n            id\n            header {\n              icon\n              heading\n              subHeading\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","// @flow\n\nimport React from 'react';\nimport { HeaderWrapper } from '../../styles/styles';\n\nconst PageHeader = ({ heading, subHeading }) => (\n  <HeaderWrapper>\n    <h1>{heading}</h1>\n    <h3>{subHeading}</h3>\n  </HeaderWrapper>\n);\n\nexport default PageHeader;\n"],"sourceRoot":""}