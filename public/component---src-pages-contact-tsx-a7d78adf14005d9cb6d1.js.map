{"version":3,"sources":["webpack:///./src/components/contact/contact.style.tsx","webpack:///./src/components/contact/pageHeader.tsx","webpack:///./src/components/contact/contact.tsx","webpack:///./src/pages/contact.tsx"],"names":["ContactMain","ContactForm","PageHeader","heading","subHeading","Contact","action","method","id","type","props","context","render","className","this","location","pathname","header","data","allFile","edges","node","childDataJson","React","pageQuery"],"mappings":"wMAEaA,EAAc,oBAAH,oBAAG,CAAH,oHAYXC,EAAc,oBAAH,oBAAG,CAAH,oV,YCFTC,EAPI,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,WAAZ,OACjB,YAAC,IAAD,KACE,sBAAKD,GACL,sBAAKC,KCmBMC,EAtBC,WACd,OACE,YAACL,EAAD,KACE,iCACA,YAAC,EAAD,CACEG,QAAS,UACTC,WAAY,uDAEd,YAACH,EAAD,CACEK,OAAO,sDACPC,OAAO,OACPC,GAAG,YAGH,YAAC,IAAD,KACE,YAAC,IAAD,CAAkBC,KAAK,e,4GCwC/B,WAAYC,EAAYC,GAAc,OACpC,YAAMD,EAAOC,IADuB,K,0GAI/BC,OAAP,WACE,OACE,mBAAKC,UAAW,WACd,YAAC,IAAD,MACA,YAAC,aAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOH,MAAOI,KAAKJ,MAAMK,SAASC,WAClC,YAAC,IAAD,CACEC,OACEH,KAAKJ,MAAMQ,KAAKC,QAAQC,MAAM,GAAGC,KAAKC,cAAcL,SAGxD,YAAC,EAAD,QAGJ,YAAC,IAAD,Q,GApBqBM,aA0BhBC,EAAY","file":"component---src-pages-contact-tsx-a7d78adf14005d9cb6d1.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactMain = styled.main`\n  grid-area: main;\n\n  padding: 1rem;\n\n  @media (min-width: 45em) {\n    padding: 0;\n    width: 100%;\n    margin: 0 auto;\n  }\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  padding: 2em 0;\n  width: 100%;\n  min-height: 50vh\n  flex-direction: column;\n  justify-content: space-around;\n  border-radius: 2px;\n  box-shadow: 0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);\n  align-content: center;\n  \n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.3), 0 4px 12px rgba(0, 0, 0, 0.22);\n  border-radius: 1rem;\n  padding: 1rem;\n`;\n","// @flow\n\nimport React from 'react';\nimport { HeaderWrapper } from '../../styles/styles';\n\nconst PageHeader = ({ heading, subHeading }) => (\n  <HeaderWrapper>\n    <h1>{heading}</h1>\n    <h3>{subHeading}</h3>\n  </HeaderWrapper>\n);\n\nexport default PageHeader;\n","import * as React from 'react';\nimport { FormSubmitLabel, FormSubmitSubmit } from '../../styles/styles';\nimport { ContactForm, ContactMain } from './contact.style';\nimport PageHeader from './pageHeader';\n\nconst Contact = () => {\n  return (\n    <ContactMain>\n      <h1>Contact</h1>\n      <PageHeader\n        heading={'Contact'}\n        subHeading={'If you wish to Contact me please fill out the form'}\n      />\n      <ContactForm\n        action=\"https://formspree.io/ell15evans.nuls@googlemail.com\"\n        method=\"POST\"\n        id=\"sendForm\"\n      >\n        {/*{this.inputGroupList()}*/}\n        <FormSubmitLabel>\n          <FormSubmitSubmit type=\"submit\" />\n        </FormSubmitLabel>\n      </ContactForm>\n    </ContactMain>\n  );\n};\n\nexport default Contact;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Main } from '../styles/styles';\nimport Footer from '../components/footer';\n\n// default style stuff\nimport '../styles/index.css';\n\n// home stuff\nimport Navigation from '../components/navigation';\nimport { Home } from '../components/home/home';\nimport Blobs from '../blobs/blobs';\nimport Banner from '../components/banner';\nimport Contact from '../components/contact/contact';\n\ninterface IndexPageProps {\n  location: Location;\n  data: {\n    allMarkdownRemark: {\n      edges: Array<IEdge>;\n    };\n    allFile: IHeaderQuery;\n  };\n}\n\ninterface IHeaderQuery {\n  edges: Array<IHeaderNode>;\n}\n\ninterface IHeaderNode {\n  node: {\n    id: string;\n    childDataJson: {\n      id: string;\n      header: IHeader;\n    };\n  };\n}\n\nexport interface IEdge {\n  node: INode;\n}\n\nexport interface INode {\n  excerpt: string;\n  timeToRead: number;\n  frontmatter: {\n    date: string;\n    title: string;\n  };\n  id: string;\n}\n\nexport interface IHeader {\n  icon: string;\n  heading: string;\n  subHeading: string;\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  constructor(props: any, context: any) {\n    super(props, context);\n  }\n\n  public render() {\n    return (\n      <div className={'appGrid'}>\n        <Navigation />\n        <React.StrictMode>\n          <Main>\n            <Blobs props={this.props.location.pathname} />\n            <Banner\n              header={\n                this.props.data.allFile.edges[0].node.childDataJson.header\n              }\n            />\n            <Contact/>\n          </Main>\n        </React.StrictMode>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n    allFile(\n      filter: { name: { eq: \"header\" }, sourceInstanceName: { eq: \"data\" } }\n    ) {\n      edges {\n        node {\n          id\n          childDataJson {\n            id\n            header {\n              icon\n              heading\n              subHeading\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}