{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["props","context","render","this","data","site","siteMetadata","title","to","React","pageQuery"],"mappings":"mPAiBE,WAAYA,EAAuBC,GAAc,OAC/C,YAAMD,EAAOC,IADkC,K,0GAG1CC,OAAP,WACE,OACE,2BACE,+CACA,+CACsB,IACpB,8BAASC,KAAKH,MAAMI,KAAKC,KAAKC,aAAaC,OAF7C,UAIA,0DACA,gBAAC,IAAD,CAAMC,GAAG,YAAT,kB,GAbqBC,aAmBhBC,EAAY","file":"component---src-pages-index-tsx-b43c039b23994a898daa.js","sourcesContent":["import * as React from 'react';\nimport Link from 'gatsby-link';\nimport { graphql } from \"gatsby\";\n\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\n// to generate all types from graphQL schema\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n  }\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  constructor(props: IndexPageProps, context: any) {\n    super(props, context)\n  }\n  public render() {\n    return (\n      <div>\n        <h1>Elliot Evans Site</h1>\n        <p>\n          Welcome to your new{' '}\n          <strong>{this.props.data.site.siteMetadata.title}</strong> site.\n        </p>\n        <p>Now go build something great.</p>\n        <Link to=\"/page-2/\">Go to page 2</Link>\n      </div>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}