{"version":3,"sources":["webpack:///./src/components/projects/ProjectList.style.tsx","webpack:///./src/components/projects/projectList.tsx","webpack:///./src/components/projects/projects.tsx","webpack:///./src/pages/projects.tsx"],"names":["ProjectsListWrapper","memo","projects","console","log","props","context","render","className","this","location","pathname","header","data","allFile","edges","node","childDataJson","allMarkdownRemark","React","pageQuery"],"mappings":"sMAEaA,EAAsB,sBAAH,mBAAG,CAAH,sG,YCWjBC,kBATK,SAACC,GAEnB,OADAC,QAAQC,IAAIF,GAEV,YAACF,EAAD,KACE,mDCKSC,kBATE,SAACC,GAChB,OACE,uBACE,iCACA,YAAC,EAAD,CAAaA,SAAUA,EAASG,Y,4GCoDpC,WAAYA,EAAYC,GAAc,OACpC,YAAMD,EAAOC,IADuB,K,0GAI/BC,OAAP,WACE,OACE,mBAAKC,UAAW,WACd,YAAC,IAAD,MACA,YAAC,aAAD,KACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAOH,MAAOI,KAAKJ,MAAMK,SAASC,WAClC,YAAC,IAAD,CACEC,OACEH,KAAKJ,MAAMQ,KAAKC,QAAQC,MAAM,GAAGC,KAAKC,cAAcL,SAGxD,YAAC,EAAD,CAAUP,MAAOI,KAAKJ,MAAMQ,KAAKK,kBAAkBH,UAGvD,YAAC,IAAD,Q,GApBqBI,aA0BhBC,EAAY","file":"component---src-pages-projects-tsx-d938ef027a562ba81624.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const ProjectsListWrapper = styled.header`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n","import * as React from 'react';\nimport { ProjectsListWrapper } from './ProjectList.style';\nimport { memo } from 'react';\n\nconst ProjectList = (projects: any) => {\n  console.log(projects);\n  return (\n    <ProjectsListWrapper>\n      <p>Project will show here</p>\n    </ProjectsListWrapper>\n  );\n};\n\nexport default memo(ProjectList);\n","import * as React from 'react';\nimport ProjectList from './projectList';\nimport { memo } from 'react';\n\nconst Projects = (projects: any) => {\n  return (\n    <div>\n      <p>Projects</p>\n      <ProjectList projects={projects.props}/>\n    </div>\n  );\n};\n\nexport default memo(Projects);\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport { Main } from '../styles/styles';\nimport Footer from '../components/footer';\n\n// default style stuff\nimport '../styles/index.css';\n\n// home stuff\nimport Navigation from '../components/navigation';\nimport { Home } from '../components/home/home';\nimport Blobs from '../blobs/blobs';\nimport Banner from '../components/banner';\nimport Projects from '../components/projects/projects';\n\ninterface IndexPageProps {\n  location: Location;\n  data: {\n    allMarkdownRemark: {\n      edges: Array<IEdge>;\n    };\n    allFile: IHeaderQuery;\n  };\n}\n\ninterface IHeaderQuery {\n  edges: Array<IHeaderNode>;\n}\n\ninterface IHeaderNode {\n  node: {\n    id: string;\n    childDataJson: {\n      id: string;\n      header: IHeader;\n    };\n  };\n}\n\nexport interface IEdge {\n  node: INode;\n}\n\nexport interface INode {\n  excerpt: string;\n  timeToRead: number;\n  frontmatter: {\n    date: string;\n    title: string;\n  };\n  id: string;\n}\n\nexport interface IHeader {\n  icon: string;\n  heading: string;\n  subHeading: string;\n}\n\nexport default class extends React.Component<IndexPageProps, {}> {\n  constructor(props: any, context: any) {\n    super(props, context);\n  }\n\n  public render() {\n    return (\n      <div className={'appGrid'}>\n        <Navigation />\n        <React.StrictMode>\n          <Main>\n            <Blobs props={this.props.location.pathname} />\n            <Banner\n              header={\n                this.props.data.allFile.edges[0].node.childDataJson.header\n              }\n            />\n            <Projects props={this.props.data.allMarkdownRemark.edges} />\n          </Main>\n        </React.StrictMode>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          excerpt\n          timeToRead\n        }\n      }\n    }\n    allFile(\n      filter: { name: { eq: \"header\" }, sourceInstanceName: { eq: \"data\" } }\n    ) {\n      edges {\n        node {\n          id\n          childDataJson {\n            id\n            header {\n              icon\n              heading\n              subHeading\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}